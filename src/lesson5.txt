Subjects

<div class="my-4 form-inline">
    <div class="d-flex">
        <input id="value-input" class="form-control" type="text" />
        <button id="emit" class="btn btn-secondary mx-1">
        Emit
        </button>
    </div>
</div>

<button id="subscribe" class="btn btn-primary">
Subscribe
</button>

const emitButton = document.querySelector('button#emit');
const inputElement: HTMLInputElement = document.querySelector('#value-input');
const subscribeButton = document.querySelector('button#subscribe');

const value$ = new Subject<string>();

// fromEvent(emitButton, 'click').subscribe(
//     () => value$.next(inputElement.value)
// )

fromEvent(emitButton, 'click').pipe(
    map(() => inputElement.value)
).subscribe(value$)

fromEvent(subscribeButton, 'click').subscribe(
    () => {
        console.log('New Subscription');
        value$.subscribe(val => console.log(val))
    }
)

BehaviorSubject
<div class="my-4 form-inline">
    <button id="login" class="btn btn-primary mr-1">
        Login
    </button>
    <button id="logout" class="btn btn-primary">
        Logout
    </button>
    </div>

    <button id="print-state" class="btn btn-secondary">
        Print state
    </button>
</div>
const loggedInSpan: HTMLElement = document.querySelector('span#logged-in');
const loginButton: HTMLElement = document.querySelector('button#login');
const logoutButton: HTMLElement = document.querySelector('button#logout');
const printStateButton: HTMLElement = document.querySelector('button#print-state');

const isLoggedIn$ = new BehaviorSubject<boolean>(false);

fromEvent(loginButton, 'click').subscribe(() => isLoggedIn$.next(true));
fromEvent(logoutButton, 'click').subscribe(() => isLoggedIn$.next(false));

// Navigation bar
isLoggedIn$.subscribe(
  isLoggedIn => loggedInSpan.innerText = isLoggedIn.toString()
);

// Buttons
isLoggedIn$.subscribe(isLoggedIn => {
  logoutButton.style.display = isLoggedIn ? 'block' : 'none';
  loginButton.style.display = !isLoggedIn ? 'block' : 'none';
});

fromEvent(printStateButton, 'click').pipe(
  withLatestFrom(isLoggedIn$)
).subscribe(
  ([event, isLoggedIn]) => console.log('User is logged in:', isLoggedIn)
);
